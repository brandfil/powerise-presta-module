name: Build
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.1

      - name: Install composer dependencies
        run: composer install

      - name: Run autoindex
        run: php vendor/bin/autoindex

      - name: Add license headers
        run: php vendor/bin/header-stamp --license=assets/afl.txt --exclude=vendor,node_modules

      # Install PHP dependencies (Production ONLY)
      - name: Install production composer dependencies
        run: composer install --no-dev -o

      # Remove development files
      - name: Clean-up project
        uses: PrestaShopCorp/github-action-clean-before-deploy@v1.0

      - name: Build zip
        run: |
          zip -r ${{ github.event.repository.name }}.zip ../${{ github.event.repository.name }} -x '**/.*' '**/.*/**'

      - id: release_info
        uses: toolmantim/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean existing assets
        shell: bash
        run: |
          curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.1
          assets=`bin/hub api -t repos/${{ github.repository }}/releases/${{ steps.release_info.outputs.id }}/assets | awk '/\].url/ { print $2 }'`
          for asset in $assets
          do
            bin/hub api -X DELETE $asset
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_info.outputs.upload_url }}
          asset_path: ./${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip
